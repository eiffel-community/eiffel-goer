# This workflow is based on
# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images.

name: Build, test, and push image

on:
  pull_request:
  push:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:

  run-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.5"

      - name: Build and test
        run: make build check tidy check-dirty

  build-push-docker-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Log in to the Container registry
        uses: docker/login-action@3d100841f68d4548bf57e52eb27bd33ec5069f55
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@418e4b98bf2841bd337d0b24fe63cb36dc8afa55
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Raise priority of the SHA-1 image to get it above the "latest"
            # tag requested in the type=raw statement. The tag with the
            # highest priority is what goes into the OCI label etc.
            type=sha,priority=300
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1
        with:
          # We need to specify the context explicitly so the action doesn't
          # grab the source straight from the git. That's not a problem in
          # itself but the .git directory (needed by govvv) won't be available.
          context: .
          file: deploy/goer/Dockerfile
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args:
            version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
